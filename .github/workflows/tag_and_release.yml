name: Version Tag Release
on:
  push:
    branches:
      - main
    tags-ignore:
      - v*
  workflow_dispatch:
    inputs:
      force_bump_type:
        description: "Force bump to a specific version type. If 'none', the next version will be determined by the commit messages."
        required: false
        default: none
        type: choice
        options:
          - major
          - minor
          - patch
          - none
      release_branch:
        description: "The originating branch that is allowed to trigger pushing version changes and creating releases. Otherwise, only version information is collected."
        default: main
        type: string
        required: false
      bump_worker_image_version:
        description: "Set to 'true' to bump the version of the worker image in the workflow file"
        default: false
        type: boolean
        required: false

jobs:
  get_input_arguments:
    name: Get event input arguments
    runs-on: ubuntu-latest
    env:
      create_release: "true"
      release_types: major,minor,patch
      release_branch: main
      bump_worker_image_version: "false"

    steps:
      - name: 🛎️  Checkout repository
        id: checkout-repo
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v3

      - name: 🏷️  Get dispatch event arguments
        id: get-dispatch-event-arguments
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "release_branch="${{ inputs.release_branch }}"" >>$GITHUB_ENV
          echo "bump_worker_image_version=${{ inputs.bump_worker_image_version }}" >>$GITHUB_ENV
          FORCE_BUMP_TYPE="${{ inputs.force_bump_type }}"
          [[ -z "${FORCE_BUMP_TYPE}" ]] && exit 0
          if [[ "${FORCE_BUMP_TYPE}" != "none" ]]; then
            echo "release_types="${FORCE_BUMP_TYPE}"" >>$GITHUB_ENV
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit --allow-empty -m "force_bump_${FORCE_BUMP_TYPE}: bot commit"
            git push
          fi
        shell: bash

      - name: 🏷️  set event arguments
        id: set-event-arguments
        run: |
          echo "create_release=${{ env.create_release }}" >>$GITHUB_OUTPUT
          echo "release_types="${{ env.release_types }}"" >>$GITHUB_OUTPUT
          echo "release_branch="${{ env.release_branch }}"" >>$GITHUB_OUTPUT
          echo "bump_worker_image_version=${{ env.bump_worker_image_version }}" >>$GITHUB_OUTPUT
        shell: bash

    outputs:
      create_release: ${{ steps.set-event-arguments.outputs.create_release }}
      release_types: ${{ steps.set-event-arguments.outputs.release_types }}
      release_branch: ${{ steps.set-event-arguments.outputs.release_branch }}
      bump_worker_image_version: ${{ steps.set-event-arguments.outputs.bump_worker_image_version }}

  call_semver_workflow:
    name: Call reusable semantic versioning workflow
    needs: get_input_arguments
    if: needs.get_input_arguments.result == 'success'
    uses: ./.github/workflows/reusable_semver.yml
    with:
      create_release: ${{ fromJSON(needs.get_input_arguments.outputs.create_release) }}
      release_types: ${{ needs.get_input_arguments.outputs.release_types }}
      release_branch: ${{ needs.get_input_arguments.outputs.release_branch }}
      bump_worker_image_version: ${{ fromJSON(needs.get_input_arguments.outputs.bump_worker_image_version) }}

  # call_needs_context_check:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - call_semver_workflow
  #     - get_input_arguments 
  #   if: needs.call_semver_workflow.result == 'success'
  #   steps:
  #     - name: Dump 'needs' context
  #       env:
  #         NEEDS_CONTEXT: ${{ toJson(needs) }}
  #       run: echo "$NEEDS_CONTEXT"

  # call_context_check:
  #   needs: 
  #     - call_semver_workflow
  #     - get_input_arguments 
  #   if: needs.call_semver_workflow.result == 'success'
  #   uses: dj-sciops/djsciops-cicd/.github/workflows/context_check.yaml@main
